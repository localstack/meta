name: Update test durations

on:
  workflow_call:
    inputs:
      repo:
        description: "source repo"
        required: true
        type: string
      branch:
        description: "branch to search"
        default: "main"
        required: false
        type: string
      eventFilter:
        description: "schedule | any-completed"
        default: "schedule"
        required: false
        type: string
      platform:
        description: "artifact platform tag used in filenames"
        default: "amd64"
        required: false
        type: string
      artifactPattern:
        description: "artifact name pattern; defaults to pytest-split-durations-${platform}-*"
        required: false
        type: string
      path:
        description: "repository path (e.g., 'localstack' or 'localstack-pro')"
        required: true
        type: string
      outPath:
        description: "path to write merged durations"
        default: ".test_durations"
        required: false
        type: string
      publishMethod:
        description: "UPLOAD_ARTIFACT or CREATE_PR"
        default: "UPLOAD_ARTIFACT"
        required: false
        type: string
      pr-title:
        default: "[Testing] Update test durations"
        required: false
        type: string
      pr-body:
        default: "This PR includes an updated `.test_durations` file, generated based on latest test durations from main"
        required: false
        type: string
      pr-branch:
        default: "test-durations-auto-updates"
        required: false
        type: string
      pr-labels:
        default: "semver: patch, area: testing, area: ci, skip-docs"
        required: false
        type: string
    secrets:
      gh-token:
        description: "token with permission to read Actions runs/artifacts in the *source* repo"
        required: true
      pr-token:
        description: "token to create PR (falls back to gh-token if not provided)"
        required: false

env:
  # Take test durations only for this platform
  PLATFORM: "amd64"

jobs:
  report:
    name: "Download, merge and create PR with test durations"
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v5
          with:
            path: ${{ inputs.path }}

        - name: Latest run-id from repository
          env:
            GH_TOKEN: ${{ secrets.gh-token }}
          run: |
            set -euo pipefail

            REPO_PATH="${{ inputs.path }}"  # 'localstack' or 'localstack-pro'
            if [ "$REPO_PATH" = "localstack-pro" ]; then
              WF_FILE=".github/workflows/aws_main.yml"   # underscore in Pro
            else
              WF_FILE=".github/workflows/aws-main.yml"   # hyphen in Community
            fi

            wfs_url="https://api.github.com/repos/localstack/${REPO_PATH}/actions/workflows?per_page=100"
            latest_workflow_id=$(
              curl -sS -H "Authorization: Bearer $GH_TOKEN" "$wfs_url" | jq -r --arg wf "$WF_FILE" '.workflows[] | select(.path==$wf) | .id' | head -n1
            )

            if [ -z "${latest_workflow_id:-}" ]; then
              echo "::error::Could not find workflow by path '$WF_FILE' in localstack/${REPO_PATH}"
              echo "Available workflows (name | path):"
              curl -sS -H "Authorization: Bearer $GH_TOKEN" "$wfs_url" \
                | jq -r '.workflows[] | "\(.name) | \(.path)"'
              exit 1
            fi

            runs_url="https://api.github.com/repos/localstack/${REPO_PATH}/actions/workflows/${latest_workflow_id}/runs?branch=main&status=success&per_page=50"
            latest_run_id=$(
              curl -sS -H "Authorization: Bearer $GH_TOKEN" "$runs_url" | jq -r '[.workflow_runs[] | select(.event=="schedule")][0].id // empty'
            )

            if [ -z "${latest_run_id:-}" ]; then
              echo "::error::No successful scheduled runs found for '$WF_FILE' on branch 'main'"
              exit 1
            fi

            echo "Latest run: https://github.com/localstack/${{ inputs.path }}/actions/runs/${latest_run_id}"
            echo "AWS_MAIN_LATEST_SCHEDULED_RUN_ID=${latest_run_id}" >> $GITHUB_ENV

        - name: Load test durations
          uses: actions/download-artifact@v5
          with:
            pattern: pytest-split-durations-${{ env.PLATFORM }}-*
            path: artifacts-test-durations
            merge-multiple: true
            run-id: ${{ env.AWS_MAIN_LATEST_SCHEDULED_RUN_ID }}
            github-token: ${{ secrets.gh-token }}  # PAT with access to artifacts from GH Actions

        - name: Merge test durations files
          shell: bash
          run: |
            jq -s 'add | to_entries | sort_by(.key) | from_entries' artifacts-test-durations/.test_durations-${{ env.PLATFORM }}*  > ${{ inputs.outPath }} || echo "::warning::Test durations were not merged"

        - name: Upload artifact with merged test durations
          uses: actions/upload-artifact@v4
          if: ${{ success() && inputs.publishMethod == 'UPLOAD_ARTIFACT' }}
          with:
            name: merged-test-durations
            path: ${{ inputs.outPath }}
            include-hidden-files: true
            if-no-files-found: error

        - name: Create PR
          uses: peter-evans/create-pull-request@v7
          if: ${{ success() && inputs.publishMethod == 'CREATE_PR' }}
          with:
            title: ${{ inputs.pr-title }}
            body: ${{ inputs.pr-body }}
            branch: ${{ inputs.pr-branch }}
            author: "LocalStack Bot <localstack-bot@users.noreply.github.com>"
            committer: "LocalStack Bot <localstack-bot@users.noreply.github.com>"
            commit-message: "CI: update .test_durations to latest version"
            path: ${{ inputs.path }}
            add-paths: ${{ inputs.outPath }}
            labels: ${{ inputs.pr-labels }}
            token: ${{ secrets.pr-token }}