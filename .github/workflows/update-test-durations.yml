name: Update test durations

on:
  workflow_call:
    inputs:
      repository-name:
        description: "Repository name: 'localstack' or 'localstack-pro'"
        required: true
        type: string
      test-durations-file-path:
        description: "Path to the test durations file in the repository"
        default: ".test_durations"
        required: false
        type: string
      publish-method:
        description: "Method to publish the test duration update results: UPLOAD_ARTIFACT or CREATE_PR"
        default: "UPLOAD_ARTIFACT"
        required: false
        type: string
    secrets:
      gh-token:
        description: "token with permission to read Actions runs/artifacts in the *source* repo"
        required: true
      pr-token:
        description: "token to create PR (falls back to gh-token if not provided)"
        required: false

env:
  # Take test durations only for this platform
  PLATFORM: "amd64"

jobs:
  report:
    name: "Download, merge and publish test durations"
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v5
          with:
            path: ${{ inputs.repository-name }}

        - name: Latest run-id from repository & artifacts prefix
          env:
            GH_TOKEN: ${{ secrets.gh-token }}
          run: |
            repository_name="${{ inputs.repository-name }}"  # 'localstack' or 'localstack-pro'
            if [ "$repository_name" = "localstack-pro" ]; then
              workflow_file_name="aws_main.yml"
              test_durations_artifacts_prefix="pytest-split-durations-pro"
            else
              workflow_file_name="aws-main.yml"
              test_durations_artifacts_prefix="pytest-split-durations"
            fi

            latest_run_id=$(gh api /repos/localstack/${repository_name}/actions/workflows/${workflow_file_name}/runs\?branch\=main\&status\=success\&event\=schedule -q '.workflow_runs | .[0].id')

            if [ -z "${latest_run_id:-}" ]; then
              echo "::error::No successful scheduled runs found for '$WF_FILE' on branch 'main'"
              exit 1
            fi

            echo "Latest run: https://github.com/localstack/${repository_name}/actions/runs/${latest_run_id}"
            echo "AWS_MAIN_LATEST_SCHEDULED_RUN_ID=${latest_run_id}" >> $GITHUB_ENV
            echo "Expected test durations artifacts prefix: ${test_durations_artifacts_prefix}"
            echo "TEST_DURATIONS_ARTIFACTS_PREFIX=${test_durations_artifacts_prefix}" >> $GITHUB_ENV

        - name: Load test durations
          uses: actions/download-artifact@v6
          with:
            pattern: ${{ env.TEST_DURATIONS_ARTIFACTS_PREFIX }}-${{ env.PLATFORM }}-*
            path: artifacts-test-durations
            merge-multiple: true
            run-id: ${{ env.AWS_MAIN_LATEST_SCHEDULED_RUN_ID }}
            github-token: ${{ secrets.gh-token }}  # PAT with access to artifacts from GH Actions

        - name: Merge test durations files
          shell: bash
          run: |
            jq -s 'add | to_entries | sort_by(.key) | from_entries' artifacts-test-durations/.test_durations-${{ env.PLATFORM }}*  > ${{ inputs.test-durations-file-path }} || echo "::warning::Test durations were not merged"

        - name: Upload artifact with merged test durations
          uses: actions/upload-artifact@v5
          if: ${{ success() && inputs.publish-method == 'UPLOAD_ARTIFACT' }}
          with:
            name: merged-test-durations
            path: ${{ inputs.test-durations-file-path }}
            include-hidden-files: true
            if-no-files-found: error

        - name: Create PR
          uses: peter-evans/create-pull-request@v7
          if: ${{ success() && inputs.publish-method == 'CREATE_PR' }}
          with:
            title: "Update test durations"
            body: "This PR includes an updated `.test_durations` file, generated based on latest test durations from main"
            branch: "test-durations-auto-updates"
            author: "LocalStack Bot <localstack-bot@users.noreply.github.com>"
            committer: "LocalStack Bot <localstack-bot@users.noreply.github.com>"
            commit-message: "CI: update .test_durations to latest version"
            path: ${{ inputs.repository-name }}
            add-paths: ${{ inputs.test-durations-file-path }}
            labels: "semver: patch, area: testing, area: ci, docs: skip, notes: skip"
            token: ${{ secrets.pr-token }}